==144983== Memcheck, a memory error detector
==144983== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==144983== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==144983== Command: ./memleak
==144983== Parent PID: 144961
==144983== 
==144983== Invalid write of size 4                                                      #error 1: invalid write
==144983==    at 0x1091C0: main (memleak.c:49)
==144983==  Address 0x4a9a068 is 0 bytes after a block of size 40 alloc'd
==144983==    at 0x484884F: malloc (vg_replace_malloc.c:393)
==144983==    by 0x10919E: main (memleak.c:46)
==144983== 
==144983== Invalid read of size 4                                                       #error 2: invalid read
==144983==    at 0x1091ED: main (memleak.c:54)
==144983==  Address 0x4a9a068 is 0 bytes after a block of size 40 alloc'd
==144983==    at 0x484884F: malloc (vg_replace_malloc.c:393)
==144983==    by 0x10919E: main (memleak.c:46)
==144983== 
==144983== Conditional jump or move depends on uninitialised value(s)                   #error 3: uses of uninitialized value
==144983==    at 0x48E4AD6: __vfprintf_internal (vfprintf-internal.c:1516)
==144983==    by 0x48CE79E: printf (printf.c:33)
==144983==    by 0x109214: main (memleak.c:57)
==144983== 
==144983== Use of uninitialised value of size 8
==144983==    at 0x48C82EB: _itoa_word (_itoa.c:177)
==144983==    by 0x48E3ABD: __vfprintf_internal (vfprintf-internal.c:1516)
==144983==    by 0x48CE79E: printf (printf.c:33)
==144983==    by 0x109214: main (memleak.c:57)
==144983== 
==144983== Conditional jump or move depends on uninitialised value(s)
==144983==    at 0x48C82FC: _itoa_word (_itoa.c:177)
==144983==    by 0x48E3ABD: __vfprintf_internal (vfprintf-internal.c:1516)
==144983==    by 0x48CE79E: printf (printf.c:33)
==144983==    by 0x109214: main (memleak.c:57)
==144983== 
==144983== Conditional jump or move depends on uninitialised value(s)
==144983==    at 0x48E45C3: __vfprintf_internal (vfprintf-internal.c:1516)
==144983==    by 0x48CE79E: printf (printf.c:33)
==144983==    by 0x109214: main (memleak.c:57)
==144983== 
==144983== Conditional jump or move depends on uninitialised value(s)
==144983==    at 0x48E3C05: __vfprintf_internal (vfprintf-internal.c:1516)
==144983==    by 0x48CE79E: printf (printf.c:33)
==144983==    by 0x109214: main (memleak.c:57)
==144983== 
==144983== Argument 'size' of function malloc has a fishy (possibly negative) value:    #error 4: negative size of memory allocation
==144983==    at 0x484884F: malloc (vg_replace_malloc.c:393)
==144983==    by 0x109220: main (memleak.c:61)
==144983== 
==144983== Invalid free() / delete / delete[] / realloc()                               #error 5: invalid free
==144983==    at 0x484B0C4: free (vg_replace_malloc.c:884)
==144983==    by 0x10924A: main (memleak.c:65)
==144983==  Address 0x4a9a4f0 is 0 bytes inside a block of size 40 free'd
==144983==    at 0x484B0C4: free (vg_replace_malloc.c:884)
==144983==    by 0x10923E: main (memleak.c:64)
==144983==  Block was alloc'd at
==144983==    at 0x484884F: malloc (vg_replace_malloc.c:393)
==144983==    by 0x10922E: main (memleak.c:63)
==144983== 
==144983== 
==144983== HEAP SUMMARY:
==144983==     in use at exit: 40 bytes in 1 blocks
==144983==   total heap usage: 3 allocs, 3 frees, 1,104 bytes allocated
==144983== 
==144983== 40 bytes in 1 blocks are definitely lost in loss record 1 of 1
==144983==    at 0x484884F: malloc (vg_replace_malloc.c:393)
==144983==    by 0x10919E: main (memleak.c:46)
==144983== 
==144983== LEAK SUMMARY:                                                                #error 6: memory leak
==144983==    definitely lost: 40 bytes in 1 blocks
==144983==    indirectly lost: 0 bytes in 0 blocks
==144983==      possibly lost: 0 bytes in 0 blocks
==144983==    still reachable: 0 bytes in 0 blocks
==144983==         suppressed: 0 bytes in 0 blocks
==144983== 
==144983== Use --track-origins=yes to see where uninitialised values come from
==144983== For lists of detected and suppressed errors, rerun with: -s
==144983== ERROR SUMMARY: 10 errors from 10 contexts (suppressed: 0 from 0)
